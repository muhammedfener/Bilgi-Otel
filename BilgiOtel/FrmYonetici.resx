<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnKampanyaEkleDuzenle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAA90lEQVRIS92UsQ6CMBRF2dUvc1ATNcZo
        QnHzD9RvcWjZ/CvRSUeoCyT4mrRJbV5LW5m4yR3g9Z5LgDYZjnh+mFaMPMGtw48PzRYyEiYRNmA2NyVL
        NzLmLw1watl+xPP0rN0zHV6iwq/bcSyu39dsogExh5WooHhyUcIZuWgwm/1LkLCvm4qSncTYhQRD3F2C
        hELtLkECMbaXwNB3H3S5QTcjp2QGw9pYHOtCYn9V5tkahn2U4AVCPZTU4m1IHK6SkqVYaAR9DB853UqM
        WxEl/nClgJJwuJJHSTxcyVHyP1wJTs0VAPWS/uBKcJTPAVyA752/4kCUJF+jpiXlGyKrlQAAAABJRU5E
        rkJggg==
</value>
  </data>
  <data name="btnCalisanEkleDuzenle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABoElEQVRIS+1Tv0vDQBg9FRz8GxRUcHbw
        PxFd7X2hdlN0EhysTirVVXHR3sUuTuKq/02ri3aQJA2KEL93vcRcaTCi4NIHj+Te974fd5eIEUbIELdo
        PtJUA2NdnbPy3yD0iUJNMTOx5HdP2vDvgMkHimdNfrST5GZ1kpOOQy2f+NkNfW8NOo4kV9RhpOU6PPDy
        uhsqemQeoRZ0Bwg4BRQ1oJdscOrEuBZ0B6Z73qTpHnqZIwqV9+DEuBZ0B0MafLy25IKJ8YXy2r1kRRXE
        4IE3Fyts4B4RM/Llrg0LTIsjAeMrOWtlAc9gHt/joQ1/wVwymvR38szPxtDLGoD9OE6YLya36JKLkNTr
        41GzsoTJQ1/ugJFPVWiIWdv34K4T/DUs9i5pJl0HmjZ5sk5/20PZDpTcgBc5vevqNGqkawNMwcZtezTt
        5KI2ZZppurNFviUPcos6yOV1p1/L20oSMSYCLc8zs09NNA0UrWRaSXKdZeTyu0q1SNEZhPdU4EkOYOKf
        ay/VyhI5yEWNnP6GBpkpUN6+MfEzr5dhUS60Ef4TQnwCqod4pL452NkAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnOdaEkleDuzenle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAtklEQVRIS2MYBSMEfFmU+B+EoVzqA7pa
        8H9VKBuQ3fllUcKzLwsTnwJxB0gMWR0e/OnzoqT1nxYnqYPUwwFMAZgNNBBJAwQDxZDVEYHffZuXKAvS
        AwYwCTAb5GpUxSALniKrIxKvAukBA5ggmE09Cz6C9IABTBDMxhZEixLakdURi0F6wABZABzJIEsgEUxq
        JKNgkB4wwBDAAZA1E4Oh2kjXSCyGGj+cLIByKQbD0IJRMICAgQEACtZxzpPNbq8AAAAASUVORK5CYII=
</value>
  </data>
</root>